/* src/components/ApplyToJobForm.module.css */

/* --- General Form Container Styling --- */
.formContainer {
    /* Padding is inherited from Modal.css .modal-body */
    /* If you want internal padding specific to this form, add it here */
    padding: 0 1rem; /* Added internal padding to this container to make content not stick to the left within the modal-body's padding */
    max-width: 600px; /* Max width for the form content itself, to prevent stretching too wide */
    margin: 0 auto; /* Centers the form content horizontally within the modal-body */
}

.formTitle {
    font-size: 2rem;
    color: #2c3e50;
    margin-bottom: 0.5rem;
    text-align: center;
    font-weight: 700;
}

.formTitle span {
    color: var(--color-primary, #007bff); /* Use a primary color variable if defined elsewhere */
}

.companyText {
    text-align: center;
    color: #6c757d;
    font-size: 1.1rem;
    margin-bottom: 1.5rem;
}

.companyText span {
    font-weight: 600;
}

/* --- Form Layout (Grid for 2-column sections) --- */
.formLayout {
    display: flex;
    flex-direction: column;
    gap: 1.5rem; /* Space between major form sections/groups */
}

.gridCols2 {
    display: grid;
    grid-template-columns: 1fr; /* Default to single column on small screens */
    gap: 1.5rem;
}

@media (min-width: 600px) {
    .gridCols2 {
        grid-template-columns: repeat(2, 1fr); /* Two columns on larger screens */
    }
}

/* --- Form Group & Labels --- */
.formGroup {
    display: flex;
    flex-direction: column;
    gap: 0.5rem; /* Space between label and input */
}

.formGroup label {
    font-size: 0.95rem;
    font-weight: 600;
    color: #34495e;
}

.requiredIndicator {
    color: #dc3545; /* Red color for required indicator */
    font-weight: bold;
    margin-left: 0.25rem;
}

/* --- Input and Textarea Fields --- */
.inputField,
.textareaField {
    width: 100%;
    padding: 0.9rem 1.2rem; /* Generous padding for comfortable typing */
    border: 1px solid #ced4da;
    border-radius: 8px; /* Slightly more rounded */
    font-size: 1rem;
    color: #495057;
    background-color: #ffffff;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.inputField:focus,
.textareaField:focus {
    outline: none;
    border-color: var(--color-primary, #007bff);
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb, 0, 123, 255), 0.25);
}

.textareaField {
    resize: vertical; /* Allow vertical resizing only */
    min-height: 100px;
}

.inputField::placeholder,
.textareaField::placeholder {
    color: #adb5bd;
}

/* --- File Input Specifics --- */
.fileInput {
    /* Style the actual file input element */
    padding: 0.75rem 1rem; /* Slightly less padding to match native look */
    border: 1px dashed #a7b4c2; /* Dashed border for visual cue */
    background-color: #f8f9fa;
    cursor: pointer;
}

.fileInput::-webkit-file-upload-button {
    visibility: hidden; /* Hide default button */
}

.fileInput::before {
    content: 'Choose File'; /* Custom button text */
    display: inline-block;
    background: var(--color-primary, #007bff);
    color: #fff;
    border: 1px solid var(--color-primary, #007bff);
    border-radius: 5px;
    padding: 0.5rem 1rem;
    outline: none;
    white-space: nowrap;
    -webkit-user-select: none;
    cursor: pointer;
    font-weight: 500;
    font-size: 1rem;
    transition: background-color 0.2s ease;
}

.fileInput:hover::before {
    background: var(--color-primary-dark, #0056b3);
}

.fileInput:active::before {
    background: var(--color-primary-dark, #0056b3);
}

.fileInput:focus {
    outline: none; /* Remove default focus outline */
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb, 0, 123, 255), 0.25);
}

.fileHint {
    font-size: 0.85rem;
    color: #6c757d;
    margin-left: 0.5rem;
}

.resumeFileName {
    margin-top: 0.5rem;
    font-size: 0.9rem;
    color: #495057;
}

.resumeFileName span {
    font-weight: 600;
    color: #333;
}

/* --- Custom Questions Section --- */
.customQuestionsSection {
    border-top: 1px solid #e9ecef;
    padding-top: 1.5rem;
    margin-top: 1.5rem;
}

.customQuestionsSection h3 {
    font-size: 1.5rem;
    color: #2c3e50;
    margin-bottom: 1rem;
}

/* --- Consent and Declaration Section --- */
.consentSection {
    border-top: 1px solid #e9ecef;
    padding-top: 1.5rem;
    margin-top: 1.5rem;
}

.consentSection h3 {
    font-size: 1.5rem;
    color: #2c3e50;
    margin-bottom: 1rem;
}

.checkboxGroup {
    display: flex;
    align-items: flex-start; /* Align checkbox and label top */
    margin-bottom: 1rem;
    gap: 0.75rem; /* Space between checkbox and label */
}

.checkboxInput {
    /* Style for the actual checkbox */
    flex-shrink: 0; /* Prevent checkbox from shrinking */
    width: 1.25rem;
    height: 1.25rem;
    border: 1px solid #ced4da;
    border-radius: 4px;
    appearance: none; /* Hide default checkbox */
    -webkit-appearance: none;
    background-color: #fff;
    cursor: pointer;
    transition: background-color 0.2s ease, border-color 0.2s ease;
}

.checkboxInput:checked {
    background-color: var(--color-primary, #007bff);
    border-color: var(--color-primary, #007bff);
}

.checkboxInput:checked::before {
    content: '\2713'; /* Checkmark Unicode character */
    display: block;
    color: white;
    font-size: 0.9rem;
    text-align: center;
    line-height: 1.25rem; /* Vertically center checkmark */
}

.checkboxInput:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb, 0, 123, 255), 0.25);
}

.checkboxLabel {
    font-size: 0.9rem;
    color: #495057;
    cursor: pointer;
    line-height: 1.4;
}

/* --- Submit Button --- */
.submitButton {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    width: 100%;
    padding: 1rem 1.5rem;
    background-color: var(--color-primary, #007bff);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s ease, opacity 0.2s ease;
    margin-top: 2rem;
}

.submitButton:hover:not(:disabled) {
    background-color: var(--color-primary-dark, #0056b3);
}

.submitButton:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
    opacity: 0.7;
}

/* --- Loading, Error, Success Status Containers --- */
.statusContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 3rem 1.5rem;
    text-align: center;
    min-height: 200px; /* Ensure some height for content */
}

.statusText {
    font-size: 1.2rem;
    color: #555;
    margin-top: 1rem;
}

.statusError {
    font-size: 1.2rem;
    color: #dc3545;
    font-weight: 600;
    margin-bottom: 1rem;
}

.statusButton {
    padding: 0.75rem 1.5rem;
    background-color: #6c757d;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.2s ease;
    margin-top: 1.5rem;
}

.statusButton:hover {
    background-color: #5a6268;
}

.successTitle {
    font-size: 2rem;
    color: var(--color-success, #28a745); /* Green for success */
    margin-bottom: 0.75rem;
    font-weight: 700;
}

.successText {
    font-size: 1.1rem;
    color: #495057;
    margin-bottom: 0.5rem;
}

.successJobTitle {
    font-weight: 600;
    color: #333;
}

.successNote {
    font-size: 0.9rem;
    color: #6c757d;
    font-style: italic;
    margin-bottom: 1.5rem;
}

/* --- Alert Messages (Error/Info) --- */
.alertMessage {
    padding: 1rem 1.5rem;
    border-radius: 8px;
    margin-bottom: 1.5rem;
    font-size: 0.95rem;
}

.alertInfo {
    background-color: #e0f7fa; /* Light blue */
    border: 1px solid #00bcd4;
    color: #007987;
}

.alertError {
    background-color: #f8d7da; /* Light red */
    border: 1px solid #dc3545;
    color: #721c24;
}

.alertBold {
    font-weight: 700;
    margin-bottom: 0.25rem;
}

/* --- Animations --- */
.animateFadeIn {
    animation: fadeIn 0.5s ease-out forwards;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Spinner for loading states and buttons */
.spinner {
    animation: spin 1s linear infinite;
    width: 2.5rem;
    height: 2.5rem;
    color: var(--color-primary, #007bff);
}

.buttonSpinner {
    animation: spin 1s linear infinite;
    width: 1.25rem; /* Smaller spinner for buttons */
    height: 1.25rem;
    color: white; /* White spinner on primary button */
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* Variables for theming (if not globally defined) */
:root {
    --color-primary: #4a90e2; /* A nice blue */
    --color-primary-dark: #357ABD;
    --color-primary-rgb: 74, 144, 226; /* RGB for the primary color */
    --color-success: #28a745;
}